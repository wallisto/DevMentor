//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.AccumulateProxies {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AccumulateProxies.IAccumulate")]
    public interface IAccumulate {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAccumulate/Add")]
        void Add(int val);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAccumulate/Add")]
        System.Threading.Tasks.Task AddAsync(int val);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAccumulateChannel : Client.AccumulateProxies.IAccumulate, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccumulateClient : System.ServiceModel.ClientBase<Client.AccumulateProxies.IAccumulate>, Client.AccumulateProxies.IAccumulate {
        
        public AccumulateClient() {
        }
        
        public AccumulateClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccumulateClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccumulateClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccumulateClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Add(int val) {
            base.Channel.Add(val);
        }
        
        public System.Threading.Tasks.Task AddAsync(int val) {
            return base.Channel.AddAsync(val);
        }
    }
}
